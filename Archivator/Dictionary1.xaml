<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Archivator">
    <!--Этот файл комментить мне в падлу. Тут стили, я не думаю что ты сюда вообще полезешь. Напиши если нашёл-->
    <!--Мне бы все цвета сюда засунуть. Лень конечно, но надо-->
    <SolidColorBrush x:Key="DefaultBackGround">#191817</SolidColorBrush>
    <SolidColorBrush x:Key="LightUpBackGround">#302F2E</SolidColorBrush>
    <SolidColorBrush x:Key="StrongLightUpBackGR">#FF686868</SolidColorBrush>
    <SolidColorBrush x:Key="ListViewBackGround">#FF2D2D30</SolidColorBrush>
    <SolidColorBrush x:Key="RedExit">#C1292E</SolidColorBrush>
    <SolidColorBrush x:Key="FadedBlue">#235789</SolidColorBrush>
    <SolidColorBrush x:Key="FadedBlueMinus" Color="#7F235789"></SolidColorBrush>

    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF"
                    Offset="0" />
                <GradientStop Color="#600000FF"
                    Offset="0.4" />
                <GradientStop Color="#600000FF"
                    Offset="0.6" />
                <GradientStop Color="#000000FF"
                    Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="LightUp" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource DefaultBackGround}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource LightUpBackGround}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ExitButton" TargetType="{x:Type Button}">
        <Style.Resources>
            <ResourceDictionary>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill" Value="{StaticResource RedExit}"/>
                    <Setter Property="Height" Value="0.75"/>
                    <Setter Property="Width" Value="27"/>
                    <Setter Property="RadiusX" Value="0.5"/>
                    <Setter Property="RadiusY" Value="0.5"/>
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <RotateTransform Angle="45"/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Style="{StaticResource LightUp}">
                        <!--STYLE THERE-->
                        <Rectangle/>
                        <Rectangle>
                            <Rectangle.LayoutTransform>
                                <RotateTransform Angle="315"/>
                            </Rectangle.LayoutTransform>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FullSizeButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Style="{StaticResource LightUp}">
                        <Rectangle Stroke="{StaticResource FadedBlue}" StrokeThickness="1.5" Margin="5,5,5,5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MinimizeButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Style="{StaticResource LightUp}">
                        <!--is this the right choice to draw a button ??-->
                        <Line X1="7" X2="23" Y1="15" Y2="15" Stroke="{StaticResource FadedBlue}" StrokeThickness="1.5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DirectoryButton" TargetType="{x:Type Button}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Resources\arrow-white.bmp"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="Resources\arrow-green.bmp"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Стиль для ListViewItem. Так как вариаций не нужно не использую Template Binding а просто ввожу значения -->
    <Style TargetType="{x:Type ListViewItem}" x:Key="ListItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels"   Value="True" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <!--Почему когда я здесь ставлю значение BackGround это вырубает триггер IsMouseOver ???-->
                    <Border HorizontalAlignment="Stretch" Margin="1,0,0,1"  Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <!--Мега странная ошибка. Если попытаться сделать TemplateBinding здесь,
                                то напишет, что BackGround недопустим т.к такого имени типа нет в Archivator-->
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="Background" Value="Transparent"></Setter>
                            </Style>
                        </Border.Style>
                        <GridViewRowPresenter HorizontalAlignment="Stretch"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"></Setter>
    </Style>

    <Style x:Key="GridViewColumnHeaderGripper"
       TargetType="Thumb">
        <Setter Property="Width"
          Value="18" />
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="Green"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent">
                        <Rectangle HorizontalAlignment="Center"
                                   Width="1"
                                   Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TestKey"
       TargetType="GridViewColumnHeader">
        <Setter Property="HorizontalContentAlignment"
          Value="Center" />
        <Setter Property="VerticalContentAlignment"
          Value="Center" />
        <Setter Property="Foreground"
          Value="White" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border x:Name="HeaderBorder"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="HeaderContent"
                              Margin="0,0,0,1"
                              RecognizesAccessKey="True"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper"
                 HorizontalAlignment="Right"
                 Margin="0,0,-9,0"
                 Style="{StaticResource GridViewColumnHeaderGripper}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role"
             Value="Floating">
                <Setter Property="Opacity"
              Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Fill="#60000000"
                         Width="{TemplateBinding ActualWidth}"
                         Height="{TemplateBinding ActualHeight}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
             Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Border Name="HeaderBorder"
                                    BorderThickness="0,1,0,1" 
                                    Background="Transparent" BorderBrush="Transparent">
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ScrollThumb" TargetType="Thumb">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <!--Сделай уже ресурсы для цветов. Я заебался-->
                    <Rectangle Fill="{StaticResource StrongLightUpBackGR}" RadiusX="4" RadiusY="4" Width="7"></Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ScrollBackButton" TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Добавить горизонтальную вариацию-->
    <Style TargetType="ScrollBar">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels"   Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <!--I Need Scroll in a Grid or smth like that-->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.1*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <!--BackGround-->
                        <Border Background="#FF3E3E42" Grid.RowSpan="3"></Border>

                        <Track x:Name="PART_Track"
                               Grid.Row="1"
                               IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ScrollBackButton}"
                                              Command="ScrollBar.PageUpCommand" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollThumb}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ScrollBackButton}" 
                                              Command="ScrollBar.PageDownCommand"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                        
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>